import { GetStaticProps } from "next";
import type { InferGetStaticPropsType } from "next";
// import { get } from "@lib/api"; 
import type { Page } from "@lib/types";
import Metadata from "@components/Metadata";
import { useTranslation } from "@hooks/useTranslation";
import { withi18n } from "@lib/decorators";
import {{pascalCase dashboard_name}}Dashboard from "@dashboards/{{dashCase dashboard_category}}/{{dashCase dashboard_name}}";
import { AnalyticsProvider } from "@hooks/useAnalytics";


const {{pascalCase dashboard_name}}: Page = ({ meta }: InferGetStaticPropsType<typeof getStaticProps>) => {
  const { t } = useTranslation(["dashboard-{{dashCase dashboard_name}}", "common"]);

  return (
    <AnalyticsProvider meta={meta}>
      <Metadata
        title={t("dashboard-{{dashCase dashboard_name}}:header")}
        description={t("dashboard-{{dashCase dashboard_name}}:description")}
        keywords={""}
      />
      <{{pascalCase dashboard_name}}Dashboard />
    </AnalyticsProvider>
  );
};
// Disabled
export const getStaticProps: GetStaticProps = withi18n("dashboard-{{dashCase dashboard_name}}", async () => {
  //   const { data } = await get("/dashboard", { dashboard: "{{dashCase dashboard_name}}" });

  return {
    notFound: false,
    props: {
        meta: {
            id: "dashboard-{{dashCase dashboard_name}}",
            type: "dashboard",
            category: "{{dashCase dashboard_category}}",
            agency: "{{titleCase agency_name}}"
        }
    },
  };
});

export default {{pascalCase dashboard_name}};
